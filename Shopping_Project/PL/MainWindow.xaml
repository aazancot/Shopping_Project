<Window x:Class="PL.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:local="clr-namespace:PL"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1350" AllowsTransparency="True" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Background="Transparent">

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="Black"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Nirmala UI"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.MouseOver.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  
                                        Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBars-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="LightGray" />
            <Setter Property="Background" Value="DarkGray" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="19" Background="{x:Null}">
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="12" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <!-- style a top level menu item -->
        <ControlTemplate x:Key="VsMenuTop" TargetType="MenuItem">
            <StackPanel TextBlock.FontSize="18px"  Height="55" Orientation="Horizontal" TextBlock.FontFamily="Nirmala UI" Width="247" 
                        TextBlock.FontWeight="Bold" Margin="0,0,0,-11" >


                <!-- label, icons, etc. -->
                <materialDesign:PackIcon Kind="ChartBar" VerticalAlignment="Center" Width="30" Height="40" Margin="10,0,0,0"/>
                <Label Content="{TemplateBinding Header}"  Width="175" Foreground="#FF5B5A5A" FontWeight="Bold" FontSize="18" Padding="15,0,0,0" VerticalAlignment="Center"/>
                <materialDesign:PackIcon Kind="ChevronDown" Height="23"   Width="22" VerticalAlignment="Center" />


                <!-- sub items -->
                <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" HorizontalAlignment="Center">
                    <Border BorderThickness="1" Background="LightGray" BorderBrush="#E0E0E0">
                        <StackPanel IsItemsHost="True" />
                    </Border>
                </Popup>
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
        </ControlTemplate>


        <!-- some base stuff -->
        <Style TargetType="Menu">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Height" Value="50px" />
        </Style>


        <!-- style a non-top level menu item -->
        <ControlTemplate x:Key="VsMenuSub" TargetType="MenuItem">
            <Border >
            
                <DockPanel TextBlock.FontSize="16px" x:Name="panel"  TextBlock.FontFamily="Nirmala UI" TextBlock.Foreground= "#FF5B5A5A">
           

                <!-- label, icons, etc. -->
                <materialDesign:PackIcon Kind="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Width="30" Height="40" Margin="10,0,0,0"/>
                <Label Content="{TemplateBinding Header}" Foreground="#FF5B5A5A"  Width="200" Padding="15,0,0,0" VerticalAlignment="Center" 
                       FontWeight="SemiBold" HorizontalAlignment="Left"/>


                <!-- sub items -->
                <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" Placement="Right" >
                    <Border BorderThickness="1" Background="LightGray" BorderBrush="#E0E0E0">
                        <StackPanel IsItemsHost="True" />
                    </Border>
                </Popup>
            </DockPanel>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="panel" Value="White" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- style the separator -->
        <ControlTemplate x:Key="VsMenuSep" TargetType="Separator">
            <Border Height="1" Background="#E0E0E0" />
        </ControlTemplate>
    </Window.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>


        <UserControl x:Name="MainUC" Grid.Column="1" >
            <UserControl.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFE4E4E4" Offset="1"/>
                    <GradientStop Color="#FFEBEBEB"/>
                </LinearGradientBrush>
            </UserControl.Background>
        </UserControl>



        <Grid Grid.Column="0" Background="LightGray" >
            <Grid.RowDefinitions>
                <RowDefinition Height="200"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="70"/>
            </Grid.RowDefinitions>
            <Grid.Effect>
                <DropShadowEffect BlurRadius="20" Color="#FFDEDEDE" RenderingBias="Quality" ShadowDepth="1"/>
            </Grid.Effect>


            <Grid>
                <StackPanel Orientation='Vertical' >
                    <Rectangle Height="170" VerticalAlignment="Top"  >
                        <Rectangle.Effect>
                            <DropShadowEffect Direction="0" BlurRadius="15" ShadowDepth="1" RenderingBias="Quality" Color="LightGray"/>
                        </Rectangle.Effect>
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="Pictures/LogoShop.jpg" Opacity="0.2"/>

                        </Rectangle.Fill>
                    </Rectangle>
                    <Border CornerRadius="15" Background="#FFDFDDDD">
                        <TextBlock Text="Analytics Shop"  FontStyle="Italic" FontWeight="Bold"  TextAlignment="Center" FontSize="20" Height="30" Foreground="#FFB91917" OpacityMask="Black" Background="Transparent" >

                        </TextBlock>
                    </Border>
                </StackPanel>
            </Grid>

            <StackPanel   Grid.Row="1"  Margin="0,40,0,0">
                <Grid Height="50" Margin="0,10,0,0">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="CartArrowDown" VerticalAlignment="Center" Width="30" Height="40" Margin="10,0,0,0" />
                        <Button Content="Purchases Validation" Padding="15,0,0,0" FontWeight="Bold" Width="210"  HorizontalContentAlignment="Left" 
                                Grid.IsSharedSizeScope="True" 
                                BorderBrush="{x:Null}" Background="{x:Null}" Style="{DynamicResource ButtonStyle1}" 
                                Foreground="#FF5B5A5A" FontFamily="Nirmala UI"  Click="ButtonPurchasesValidation"/>
                    </StackPanel>
                </Grid>
                <Grid Height="50" Margin="0,10,0,0" >
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="FileClockOutline" VerticalAlignment="Center" Width="30" Height="40" Margin="10,0,0,0"/>
                        <Button Content="Orders History" Padding="15,0,0,0" FontWeight="Bold" Width="210"  HorizontalContentAlignment="Left" Grid.IsSharedSizeScope="True" 
                                BorderBrush="{x:Null}" Background="{x:Null}" Style="{DynamicResource ButtonStyle1}" 
                                Foreground="#FF5B5A5A" FontFamily="Nirmala UI" 
                                Click="ButtonOrdersHistory"/>
                    </StackPanel>
                </Grid>


                <Menu IsMainMenu="True"  VerticalAlignment="Center" HorizontalAlignment="Center" >
                    <MenuItem Template="{StaticResource VsMenuTop}" Header="Analytics" >
                        <MenuItem Header="Products Statistics"  Icon="basket" Template="{StaticResource VsMenuSub}" Click="MenuItem_Click"  />
                        <MenuItem Header="Stores Statistics" Icon="storefront" Template="{StaticResource VsMenuSub}" Click="MenuItem_Click"/>
                        <MenuItem Header="Categories Statistics" Icon="hexagonmultiple" Template="{StaticResource VsMenuSub}" Click="MenuItem_Click" />
                        <MenuItem Header="Purchase Costs Statistics" Icon="creditcardclockoutline" Template="{StaticResource VsMenuSub}" Click="MenuItem_Click" />
                    </MenuItem>
                </Menu>


                <Grid Height="50" Margin="0,10,0,0">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="HeartMultiple" VerticalAlignment="Center" Width="30" Height="40" Margin="10,0,0,0"/>
                        <Button Content="Recommendations" Padding="15,0,0,0" FontWeight="Bold" Width="210" HorizontalContentAlignment="Left" Grid.IsSharedSizeScope="True" BorderBrush="{x:Null}" Background="{x:Null}" Style="{DynamicResource ButtonStyle1}"  Foreground="#FF5B5A5A" FontFamily="Nirmala UI" Click="ButtonRecommendations"/>
                    </StackPanel>
                </Grid>
                <Grid Height="50" Margin="0,10,0,0">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Cog" VerticalAlignment="Center" Width="30" Height="40" Margin="10,0,0,0"/>
                        <Button Content="Settings" Padding="15,0,0,0" FontWeight="Bold" Width="210" HorizontalContentAlignment="Left" Grid.IsSharedSizeScope="True" BorderBrush="{x:Null}" Background="{x:Null}" Style="{DynamicResource ButtonStyle1}"  Foreground="#FF5B5A5A" FontFamily="Nirmala UI" Click="ButtonSettings"/>
                    </StackPanel>
                </Grid>
            </StackPanel>

            <Grid Grid.Row="2" Height="50" Margin="0,10,0,0">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="PowerSettings" VerticalAlignment="Center" Width="30" Height="40" Margin="10,5,0,-0.4" />
                    <Button Content="Log Out" Padding="15,0,0,0" FontWeight="Bold" Width="210"  HorizontalContentAlignment="Left" Grid.IsSharedSizeScope="True" BorderBrush="{x:Null}" Background="{x:Null}" Style="{DynamicResource ButtonStyle1}" Foreground="#FF5B5A5A" FontFamily="Nirmala UI" Margin="0,0,0,-0.4" Height="50" VerticalAlignment="Top" Click="Button_Click"  />
                </StackPanel>
            </Grid>


        </Grid>

    </Grid>
</Window>
